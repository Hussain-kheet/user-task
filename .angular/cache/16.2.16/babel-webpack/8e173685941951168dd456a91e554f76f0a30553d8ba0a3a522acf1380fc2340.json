{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SearchPipe {\n  /*  transform(value: any, args?: any): any {\n  if(!value)  return null;\n  if(!args) return value;\n  args = args.toLowerCase();\n  return value.filter((item:any) => {\n    return JSON.stringify(item).toLowerCase().includes(args)\n  })\n  } */\n  transform(items, searchText) {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLowerCase();\n    return items.filter(item => item.id.toString().includes(searchText));\n  }\n  static {\n    this.ɵfac = function SearchPipe_Factory(t) {\n      return new (t || SearchPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"search\",\n      type: SearchPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["SearchPipe","transform","items","searchText","toLowerCase","filter","item","id","toString","includes","pure"],"sources":["C:\\project\\course-angolar\\task\\user-dashboard\\task-user\\src\\app\\search.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n  /*  transform(value: any, args?: any): any {\n  if(!value)  return null;\n  if(!args) return value;\n  args = args.toLowerCase();\n  return value.filter((item:any) => {\n    return JSON.stringify(item).toLowerCase().includes(args)\n  })\n  } */\n\n  transform(items: any[], searchText: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLowerCase();\n    return items.filter((item) => item.id.toString().includes(searchText));\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,UAAU;EACrB;;;;;;;;EASAC,SAASA,CAACC,KAAY,EAAEC,UAAkB;IACxC,IAAI,CAACD,KAAK,EAAE;MACV,OAAO,EAAE;;IAEX,IAAI,CAACC,UAAU,EAAE;MACf,OAAOD,KAAK;;IAEdC,UAAU,GAAGA,UAAU,CAACC,WAAW,EAAE;IACrC,OAAOF,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAACN,UAAU,CAAC,CAAC;EACxE;;;uBAnBWH,UAAU;IAAA;EAAA;;;;YAAVA,UAAU;MAAAU,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}