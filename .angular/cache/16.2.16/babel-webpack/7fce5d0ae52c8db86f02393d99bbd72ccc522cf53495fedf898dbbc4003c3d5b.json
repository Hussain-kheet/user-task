{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HomeServicesService {\n  constructor(http) {\n    this.http = http;\n    this.filterSubject = new BehaviorSubject(''); // Initial value is empty\n    this.filterName$ = this.filterSubject.asObservable();\n  }\n  // Setter for searchId\n  setSearchId(id) {\n    this.searchId = id;\n  }\n  // Getter for searchId\n  getSearchId() {\n    return this.searchId;\n  }\n  getAllDataUser() {\n    return this.http.get('https://reqres.in/api/users');\n  }\n  getOneUserInformation(id) {\n    return this.http.get('https://reqres.in/api/users/' + id);\n  }\n  updateFilterName(filterName) {\n    this.filterSubject.next(filterName);\n  }\n  static {\n    this.ɵfac = function HomeServicesService_Factory(t) {\n      return new (t || HomeServicesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HomeServicesService,\n      factory: HomeServicesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","HomeServicesService","constructor","http","filterSubject","filterName$","asObservable","setSearchId","id","searchId","getSearchId","getAllDataUser","get","getOneUserInformation","updateFilterName","filterName","next","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\project\\course-angolar\\task\\user-dashboard\\task-user\\src\\app\\home\\homeServices\\home-services.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeServicesService {\n\n  constructor(private http:HttpClient) {\n\n  }\n    // Setter for searchId\n    setSearchId(id: string): void {\n      this.searchId = id;\n    }\n\n    // Getter for searchId\n    getSearchId(): string {\n      return this.searchId;\n    }\n  getAllDataUser(){\n    return this.http.get('https://reqres.in/api/users')\n  }\n  getOneUserInformation(id: any) {\n    return this.http.get('https://reqres.in/api/users/' + id);\n  }\n\n  private filterSubject = new BehaviorSubject<string>(''); // Initial value is empty\n  filterName$ = this.filterSubject.asObservable();\n\n  updateFilterName(filterName: string): void {\n    this.filterSubject.next(filterName);\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAmBhB,KAAAC,aAAa,GAAG,IAAIJ,eAAe,CAAS,EAAE,CAAC,CAAC,CAAC;IACzD,KAAAK,WAAW,GAAG,IAAI,CAACD,aAAa,CAACE,YAAY,EAAE;EAlB/C;EACE;EACAC,WAAWA,CAACC,EAAU;IACpB,IAAI,CAACC,QAAQ,GAAGD,EAAE;EACpB;EAEA;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,QAAQ;EACtB;EACFE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,6BAA6B,CAAC;EACrD;EACAC,qBAAqBA,CAACL,EAAO;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,8BAA8B,GAAGJ,EAAE,CAAC;EAC3D;EAKAM,gBAAgBA,CAACC,UAAkB;IACjC,IAAI,CAACX,aAAa,CAACY,IAAI,CAACD,UAAU,CAAC;EACrC;;;uBA1BWd,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnBnB,mBAAmB;MAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}